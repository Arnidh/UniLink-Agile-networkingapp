name: UniLink DevOps CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: unilink
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Install Node dependencies
      run: npm install

    - name: Run Vitest tests
      run: |
        npx vitest run

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt || true

    - name: Run Pytest
      run: |
        pytest supabase/tests || echo "No Pytest tests"

    - name: Run PyUnit
      run: |
        python -m unittest discover -s supabase/tests || echo "No PyUnit tests"

    - name: Deploy to Vercel
      run: |
        npm install -g vercel
        vercel --token=${{ secrets.VERCEL_TOKEN }} --prod

    - name: Build Docker Image
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/unilink .

    - name: Login to DockerHub and Push
      run: |
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
        docker push ${{ secrets.DOCKER_USERNAME }}/unilink
