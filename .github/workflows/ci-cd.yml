name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  test-backend:
    runs-on: ubuntu-latest
    name: Run Backend Tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest

      - name: Run Pytest
        run: pytest

  test-frontend:
    runs-on: ubuntu-latest
    name: Run Frontend Tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test --if-present

  deploy-dockerhub:
    needs: [test-backend, test-frontend]
    runs-on: ubuntu-latest
    name: Deploy Docker Image to DockerHub
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/unilink-app:latest .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/unilink-app:latest

  deploy-vercel:
    needs: [test-backend, test-frontend]
    runs-on: ubuntu-latest
    name: Deploy to Vercel
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Vercel Deploy
        run: |
          npm install -g vercel
          vercel --token ${{ secrets.VERCEL_TOKEN }} --prod --confirm
